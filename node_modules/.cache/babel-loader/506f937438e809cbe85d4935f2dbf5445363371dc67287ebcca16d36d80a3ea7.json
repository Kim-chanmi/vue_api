{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HeaderCont = _resolveComponent(\"HeaderCont\");\n  const _component_TitleCont = _resolveComponent(\"TitleCont\");\n  const _component_ContactCont = _resolveComponent(\"ContactCont\");\n  const _component_FooterCont = _resolveComponent(\"FooterCont\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_HeaderCont), _createVNode(_component_TitleCont, {\n    name1: \"reference\",\n    name2: \"api\"\n  }), _createVNode(_component_ContactCont), _createVNode(_component_FooterCont)]);\n}","map":{"version":3,"mappings":";;;;;;uBACEA,oBAKM,cAJJC,aAAcC,wBACdD,aAA2CE;IAAhCC,KAAK,EAAC,WAAW;IAACC,KAAK,EAAC;MACnCJ,aAAeK,yBACfL,aAAcM","names":["_createElementBlock","_createVNode","_component_HeaderCont","_component_TitleCont","name1","name2","_component_ContactCont","_component_FooterCont"],"sourceRoot":"","sources":["C:\\Users\\chanm\\Documents\\vue_api\\src\\views\\ReferView.vue"],"sourcesContent":["<template>\n  <div>\n    <HeaderCont />\n    <TitleCont name1=\"reference\" name2=\"api\" />\n    <ContactCont />\n    <FooterCont />\n  </div>\n</template>\n\n<script>\nimport HeaderCont from \"@/components/HeaderCont.vue\";\nimport FooterCont from \"@/components/FooterCont.vue\";\nimport TitleCont from \"@/components/TitleCont.vue\";\nimport ContactCont from \"@/components/ContactCont.vue\";\nimport { ref } from \"vue\";\n\nexport default {\n  components: {\n    HeaderCont,\n    FooterCont,\n    TitleCont,\n    ContactCont,\n  },\n\n  setup() {\n    const refers = ref([]);\n\n    const reference = () => {\n      fetch(\n        \"https://kim-chanmi.github.io/react_api/src/utils/cssReference_me.json\"\n      )\n        .then((response) => response.json())\n        .then((result) => console.log(result.data.cssRefer))\n        .catch((error) => console.log(\"error\", error));\n    };\n    reference();\n\n    return {\n      refers,\n      reference,\n    };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}